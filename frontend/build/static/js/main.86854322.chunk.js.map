{"version":3,"sources":["actions/data_actions.js","util/datas_api_util.js","components/data_list.js","components/splash_page.js","components/app.js","components/root.js","reducers/datas_reducer.js","reducers/entities.js","reducers/root_reducer.js","store/store.js","index.js"],"names":["RECEIVE_ALL_DATAS","fetchDatas","dispatch","axios","get","then","datas","type","reciveDatas","DataList","props","id","this","data","city","company","email","firstName","grades","lastName","src","pic","skill","React","Component","SplashPage","map","connect","state","ownProps","Object","values","entities","exact","path","component","Root","store","DataReducer","oldState","action","freeze","newState","assign","students","combineReducers","RootReducer","configureStore","preloadedState","createStore","rootReducer","applyMiddleware","thunk","logger","document","addEventListener","root","getElementById","ReactDOM","render"],"mappings":"uOAEaA,EAAoB,oBAOpBC,EAAa,kBAAM,SAACC,GAC7B,OCPOC,IAAMC,IAAI,cDQZC,MAAK,SAACC,GAAD,OAAWJ,EAPE,SAACI,GAAD,MAAY,CACnCC,KAAMP,EACNM,SAK8BE,CAAYF,S,OETzBG,E,kDACjB,WAAYC,GAAQ,uCACVA,G,0CAGV,WACI,OACI,qBAAKC,GAAIC,KAAKF,MAAMG,KAAKF,GAAzB,SACI,+BACI,8BAAMC,KAAKF,MAAMG,KAAKC,OACtB,8BAAMF,KAAKF,MAAMG,KAAKE,UACtB,8BAAMH,KAAKF,MAAMG,KAAKG,QACtB,8BAAMJ,KAAKF,MAAMG,KAAKI,YACtB,8BAAML,KAAKF,MAAMG,KAAKK,SACtB,8BAAMN,KAAKF,MAAMG,KAAKF,KACtB,8BAAMC,KAAKF,MAAMG,KAAKM,WACtB,qBAAKC,IAAKR,KAAKF,MAAMG,KAAKQ,MAC1B,8BAAMT,KAAKF,MAAMG,KAAKS,iB,GAjBJC,IAAMC,WCiBtCC,E,kDACF,WAAYf,GAAQ,uCACVA,G,qDAGV,WACIE,KAAKF,MAAMT,e,oBAGf,WACI,OACI,8BACI,6BACKW,KAAKF,MAAMJ,MAAMoB,KAAI,SAAAb,GAAI,OACtB,cAAC,EAAD,CAAwBA,KAAMA,GAAfA,EAAKF,e,GAdnBY,IAAMC,WAuBhBG,eAnCF,SAACC,EAAOC,GACjB,MAAO,CACHvB,MAAOwB,OAAOC,OAAOH,EAAMI,SAAS1B,WAI/B,SAACJ,EAAU2B,GACpB,MAAO,CACH5B,WAAY,kBAAMC,EAASD,SA2BpB0B,CAAoBF,GCtCpB,oBACX,8BACI,cAAC,IAAD,CAAOQ,OAAK,EAACC,KAAK,IAAIC,UAAWV,OCO1BW,EARF,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACT,cAAC,IAAD,CAAUA,MAAOA,EAAjB,SACI,cAAC,IAAD,UACI,cAAC,EAAD,S,gCCQGC,EAZK,WAA4B,IAA3BC,EAA0B,uDAAf,GAAIC,EAAW,uCAC3CV,OAAOW,OAAOF,GACd,IAAIG,EAAWZ,OAAOa,OAAO,GAAIJ,GACjC,OAAQC,EAAOjC,MACX,KAAKP,EAED,OADA8B,OAAOa,OAAOD,EAAUF,EAAOlC,MAAMO,KAAK+B,UACnCF,EACX,QACI,OAAOH,ICTJM,cAAgB,CAC3BvC,UCGWwC,EAJKD,YAAgB,CAChCb,aCSWe,EAPQ,eAACC,EAAD,uDAAkB,GAAlB,OACnBC,YACIC,EACAF,EACAG,YAAgBC,IAAOC,OCL/BC,SAASC,iBAAiB,oBAAoB,WAC1C,IAAIlB,EAAQU,IACNS,EAAOF,SAASG,eAAe,QACrCC,IAASC,OAAO,cAAC,EAAD,CAAMtB,MAAOA,IAAWmB,Q","file":"static/js/main.86854322.chunk.js","sourcesContent":["import * as DataUtil from '../util/datas_api_util';\n\nexport const RECEIVE_ALL_DATAS = 'RECEIVE_ALL_DATAS';\n\nexport const reciveDatas = (datas) => ({\n    type: RECEIVE_ALL_DATAS,\n    datas,\n})\n\nexport const fetchDatas = () => (dispatch) => {\n    return DataUtil.getDatas()\n        .then((datas) => dispatch(reciveDatas(datas)))\n}","import axios from 'axios'\n\nexport const getDatas = () => {\n    return axios.get('/api/datas',)\n}","import React from 'react';\n\nexport default class DataList extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    \n    render(){\n        return (\n            <div id={this.props.data.id}>\n                <li>\n                    <div>{this.props.data.city}</div>\n                    <div>{this.props.data.company}</div>\n                    <div>{this.props.data.email}</div>\n                    <div>{this.props.data.firstName}</div>\n                    <div>{this.props.data.grades}</div>\n                    <div>{this.props.data.id}</div>\n                    <div>{this.props.data.lastName}</div>\n                    <img src={this.props.data.pic} />\n                    <div>{this.props.data.skill}</div>\n                </li>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n    fetchDatas,\n} from \"../actions/data_actions\";\nimport DataList from './data_list';\n\nconst mSTP = (state, ownProps) => {\n    return {\n        datas: Object.values(state.entities.datas),\n    };\n};\n\nconst mDTP = (dispatch, ownProps) => {\n    return {\n        fetchDatas: () => dispatch(fetchDatas()),\n    };\n};\n\nclass SplashPage extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        this.props.fetchDatas();\n    }\n\n    render() {\n        return (\n            <div>\n                <ul>\n                    {this.props.datas.map(data =>\n                        <DataList key={data.id} data={data} />\n                    )}\n                </ul>\n                \n            </div>\n        )\n    }\n}\n\nexport default connect(mSTP, mDTP)(SplashPage);","import React from \"react\";\nimport { Route } from 'react-router-dom';\nimport SplashPage from \"./splash_page\";\n\nexport default () => (\n    <div>\n        <Route exact path=\"/\" component={SplashPage} />\n    </div>\n);","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport App from './app';\n\nconst Root = ({ store }) => (\n    <Provider store={store}>\n        <HashRouter>\n            <App />\n        </HashRouter>\n    </Provider>\n);\n\nexport default Root;","import {\n    RECEIVE_ALL_DATAS\n} from '../actions/data_actions';\n\nconst DataReducer = (oldState = {}, action) => {\n    Object.freeze(oldState);\n    let newState = Object.assign({}, oldState);\n    switch (action.type) {\n        case RECEIVE_ALL_DATAS:\n            Object.assign(newState, action.datas.data.students);\n            return newState;\n        default:\n            return oldState;\n    }\n}\n\nexport default DataReducer;","import { combineReducers } from 'redux';\nimport datas from './datas_reducer';\n\nexport default combineReducers({\n    datas\n});","import { combineReducers } from \"redux\";\nimport entities from \"./entities\";\n\nconst RootReducer = combineReducers({\n    entities,\n});\n\nexport default RootReducer;","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport logger from \"redux-logger\";\n\nimport rootReducer from \"../reducers/root_reducer\";\n\nconst configureStore = (preloadedState = {}) =>\n    createStore(\n        rootReducer,\n        preloadedState,\n        applyMiddleware(thunk, logger)\n    );\n\nexport default configureStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from './components/root';\nimport configureStore from './store/store';\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    let store = configureStore();;\n    const root = document.getElementById(\"root\");\n    ReactDOM.render(<Root store={store} />, root);\n});"],"sourceRoot":""}