{"version":3,"sources":["actions/data_actions.js","util/datas_api_util.js","components/data_list.js","components/splash_page.js","components/app.js","components/root.js","reducers/datas_reducer.js","reducers/entities.js","reducers/root_reducer.js","store/store.js","index.js"],"names":["RECEIVE_ALL_DATAS","fetchDatas","dispatch","axios","get","then","datas","type","reciveDatas","DataList","props","array","Object","keys","this","data","slice","id","_id","map","el","React","Component","SplashPage","connect","state","ownProps","values","entities","exact","path","component","Root","store","DataReducer","oldState","action","freeze","newState","assign","combineReducers","RootReducer","configureStore","preloadedState","createStore","rootReducer","applyMiddleware","thunk","logger","document","addEventListener","root","getElementById","ReactDOM","render"],"mappings":"uOAEaA,EAAoB,oBAOpBC,EAAa,kBAAM,SAACC,GAC7B,OCPOC,IAAMC,IAAI,cDQZC,MAAK,SAACC,GAAD,OAAWJ,EAPE,SAACI,GAAD,MAAY,CACnCC,KAAMP,EACNM,SAK8BE,CAAYF,S,OETzBG,E,kDACjB,WAAYC,GAAQ,uCACVA,G,0CAGV,WAAS,IAAD,OACEC,EAAQC,OAAOC,KAAKC,KAAKJ,MAAMK,MAAMC,MAAM,GACjD,OACI,qBAAKC,GAAIH,KAAKJ,MAAMK,KAAKG,IAAzB,SACI,6BAEQP,EAAMQ,KAAI,SAAAC,GAAE,OAAI,8BAAe,EAAKV,MAAMK,KAAKK,IAArBA,c,GAXZC,IAAMC,WCiBtCC,E,kDACF,WAAYb,GAAQ,uCACVA,G,qDAGV,WACII,KAAKJ,MAAMT,e,oBAGf,WACI,OACI,8BACI,6BACKa,KAAKJ,MAAMJ,MAAMa,KAAI,SAAAJ,GAAI,OACtB,cAAC,EAAD,CAAyBA,KAAMA,GAAhBA,EAAKG,gB,GAdnBG,IAAMC,WAuBhBE,eAnCF,SAACC,EAAOC,GACjB,MAAO,CACHpB,MAAOM,OAAOe,OAAOF,EAAMG,SAAStB,WAI/B,SAACJ,EAAUwB,GACpB,MAAO,CACHzB,WAAY,kBAAMC,EAASD,SA2BpBuB,CAAoBD,GCtCpB,oBACX,8BACI,cAAC,IAAD,CAAOM,OAAK,EAACC,KAAK,IAAIC,UAAWR,OCO1BS,EARF,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACT,cAAC,IAAD,CAAUA,MAAOA,EAAjB,SACI,cAAC,IAAD,UACI,cAAC,EAAD,S,gCCQGC,EAZK,WAA4B,IAA3BC,EAA0B,uDAAf,GAAIC,EAAW,uCAC3CxB,OAAOyB,OAAOF,GACd,IAAIG,EAAW1B,OAAO2B,OAAO,GAAIJ,GACjC,OAAQC,EAAO7B,MACX,KAAKP,EAED,OADAY,OAAO2B,OAAOD,EAAUF,EAAO9B,MAAMS,MAC9BuB,EACX,QACI,OAAOH,ICTJK,cAAgB,CAC3BlC,UCGWmC,EAJKD,YAAgB,CAChCZ,aCSWc,EAPQ,eAACC,EAAD,uDAAkB,GAAlB,OACnBC,YACIC,EACAF,EACAG,YAAgBC,IAAOC,OCL/BC,SAASC,iBAAiB,oBAAoB,WAC1C,IAAIjB,EAAQS,IACNS,EAAOF,SAASG,eAAe,QACrCC,IAASC,OAAO,cAAC,EAAD,CAAMrB,MAAOA,IAAWkB,Q","file":"static/js/main.b3164e0b.chunk.js","sourcesContent":["import * as DataUtil from '../util/datas_api_util';\n\nexport const RECEIVE_ALL_DATAS = 'RECEIVE_ALL_DATAS';\n\nexport const reciveDatas = (datas) => ({\n    type: RECEIVE_ALL_DATAS,\n    datas,\n})\n\nexport const fetchDatas = () => (dispatch) => {\n    return DataUtil.getDatas()\n        .then((datas) => dispatch(reciveDatas(datas)))\n}","import axios from 'axios'\n\nexport const getDatas = () => {\n    return axios.get('/api/datas',)\n}","import React from 'react';\n\nexport default class DataList extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    \n    render(){\n        const array = Object.keys(this.props.data).slice(1)\n        return (\n            <div id={this.props.data._id}>\n                <li>\n                    {\n                        array.map(el => <div key={el}>{this.props.data[el]}</div>)\n                    }\n                </li>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n    fetchDatas,\n} from \"../actions/data_actions\";\nimport DataList from './data_list';\n\nconst mSTP = (state, ownProps) => {\n    return {\n        datas: Object.values(state.entities.datas),\n    };\n};\n\nconst mDTP = (dispatch, ownProps) => {\n    return {\n        fetchDatas: () => dispatch(fetchDatas()),\n    };\n};\n\nclass SplashPage extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        this.props.fetchDatas();\n    }\n\n    render() {\n        return (\n            <div>\n                <ul>\n                    {this.props.datas.map(data =>\n                        <DataList key={data._id} data={data} />\n                    )}\n                </ul>\n                \n            </div>\n        )\n    }\n}\n\nexport default connect(mSTP, mDTP)(SplashPage);","import React from \"react\";\nimport { Route } from 'react-router-dom';\nimport SplashPage from \"./splash_page\";\n\nexport default () => (\n    <div>\n        <Route exact path=\"/\" component={SplashPage} />\n    </div>\n);","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport App from './app';\n\nconst Root = ({ store }) => (\n    <Provider store={store}>\n        <HashRouter>\n            <App />\n        </HashRouter>\n    </Provider>\n);\n\nexport default Root;","import {\n    RECEIVE_ALL_DATAS\n} from '../actions/data_actions';\n\nconst DataReducer = (oldState = {}, action) => {\n    Object.freeze(oldState);\n    let newState = Object.assign({}, oldState);\n    switch (action.type) {\n        case RECEIVE_ALL_DATAS:\n            Object.assign(newState, action.datas.data);\n            return newState;\n        default:\n            return oldState;\n    }\n}\n\nexport default DataReducer;","import { combineReducers } from 'redux';\nimport datas from './datas_reducer';\n\nexport default combineReducers({\n    datas\n});","import { combineReducers } from \"redux\";\nimport entities from \"./entities\";\n\nconst RootReducer = combineReducers({\n    entities,\n});\n\nexport default RootReducer;","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport logger from \"redux-logger\";\n\nimport rootReducer from \"../reducers/root_reducer\";\n\nconst configureStore = (preloadedState = {}) =>\n    createStore(\n        rootReducer,\n        preloadedState,\n        applyMiddleware(thunk, logger)\n    );\n\nexport default configureStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from './components/root';\nimport configureStore from './store/store';\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    let store = configureStore();;\n    const root = document.getElementById(\"root\");\n    ReactDOM.render(<Root store={store} />, root);\n});"],"sourceRoot":""}